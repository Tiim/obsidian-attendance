import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import sveltePlugin from "esbuild-svelte";
import sveltePreprocess from "svelte-preprocess";
import fs from "fs";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository 
https://github.com/Tiim/obsidian-attendance/

If you like this plugin, please consider buying me a coffee:
https://www.buymeacoffee.com/Tiim
*/
`;

const prod = process.argv[2] === "production";

esbuild
	.build({
		banner: {
			js: banner,
		},
		entryPoints: ["src/main.ts"],
		bundle: true,
		external: [
			"obsidian",
			"electron",
			"@codemirror/autocomplete",
			"@codemirror/closebrackets",
			"@codemirror/collab",
			"@codemirror/commands",
			"@codemirror/comment",
			"@codemirror/fold",
			"@codemirror/gutter",
			"@codemirror/highlight",
			"@codemirror/history",
			"@codemirror/language",
			"@codemirror/lint",
			"@codemirror/matchbrackets",
			"@codemirror/panel",
			"@codemirror/rangeset",
			"@codemirror/rectangular-selection",
			"@codemirror/search",
			"@codemirror/state",
			"@codemirror/stream-parser",
			"@codemirror/text",
			"@codemirror/tooltip",
			"@codemirror/view",
			...builtins,
		],
		format: "cjs",
		watch: prod
			? false
			: {
					onRebuild(error, result) {
						if (!error) {
							write(result);
						}
					},
				},
		target: "es2016",
		logLevel: "info",
		sourcemap: prod ? false : "inline",
		treeShaking: true,
		outfile: "main.js",
		plugins: [
			sveltePlugin({
				preprocess: sveltePreprocess(),
			}),
		],
		write: false,
	})
	.catch(() => process.exit(1))
	.then(write);

function write(result) {
	console.log("Write to file...");
	result.outputFiles.forEach((file) => {
		if (file.path.endsWith("main.css")) {
			file.path = file.path.replace("main.css", "styles.css");
		}
		fs.writeFileSync(file.path, file.contents);
	});
}
